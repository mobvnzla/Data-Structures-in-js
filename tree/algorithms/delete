delete(number, parent = root)

1) number == root? (special case)
    Yes -> run special case -> 5
    No -> go step 2

2) compare number with parent
    number < parent -> go step 3
    number > parent -> go step 3
    
3) parent has child in that direction?
    No -> number doesnt exist -> exit program !!
    Yes -> go step 4

4)number == child of parent ?
    No -> invoke delete(number, child)
    Yes -> number to be delete has been FOUND -> go step 5

5) parent has grandchild in that direction?
    No -> delete number -> exit program !!
    Yes -> go step 6

6) number has 1 child?
    Yes -> replace number with it's child -> exit program !!
    No -> this means number has 2 children -> go step 7

now we got 2 cases
case 1) find the smallest number on the right sub tree
case 2) find the greatest number on the left sub tree


7) apply case 2, find the greatest number on the left sub tree by:
    invoking getTheGreatest(grandchild)

8)cut the greatest number by:
    making a copy of it and deleting the original by invoking delete( greatestNumber, number)

done